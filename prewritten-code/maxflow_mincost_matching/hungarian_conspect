Задача о назначениях. Венгерский алгоритм.

Возьмем какую-нибудь вершину. Если мы ко всем ребрам исходящим из нее прибавим какое-то значение W, то стоимость паросочетания увеличится так же на W, потому что нам все равно нужно будет взять какое-нибудь ребро исходящее из этой вершины. Так же, так как мы прибавили ко всем одинаковое значение, выберем мы все равно то же ребро, что мы выбрали бы без этой прибавки.
Убьем все отрицательные ребра.
В таком графе без отрицательных ребер, паросочетание, у которого стоимость каждого ребра равно нулю, является минимальным по стоимости. Найдем именно такое паросочетание.

Алгоритм за O(N^4)
	Будем делать N итераций алгоритма. На каждой итерации мы находим увеличивающую цепь по ребрам нулевой стоимости и увеличиваем размер паросочетания на 1.
	В каждой итерации мы запускаем обычный поиск чередующейся цепи от каждой не занятой паросочетанием вершины. 
	Если мы не нашли такой цепи, то сделаем пару шаманств, которые нам помогут. 
	Мы посетили какие-то вершины в левой доли и в правой доли. Увеличивающую цепь мы сможем найти только по ребру из левойпосещенной вершины в правую не посещенную вершину. Но такое ребро должно быть ценой нуль. Такого ребра нет, иначе мы бы по нему пошли и вершина в правой доли, куда она ведет не была бы не посещенной. Нужно сделать такое ребро. Для всех таких ребер из левой посещенной в правую не посещенную мы выберем с минимальной ценой W. 
	Отнимем W от всех посещенных вершин левой доли и прибавим W ко всем посещенным вершинам правой доли. Таким образом все ребра паросочетания останутся нулевыми, ребро с весом W станет нулевым, и никакие ребра не станут отрицательными, так как мы отняли минимальное из таких ребер.
	ОК, теперь у нас есть новое нулевое ребро. Попробуем найти увеличивающуюся цепь еще раз. И будем повторять эти шаманства, пока не найдем увеличивающую цепь и не увеличим паросочетание.
	Мы делаем N итераций. Внутри все наши шаманства мы можем сделать N раз, так как за каждое шаманство добавляется новое ребро и новая посещенная вершина. Шаманство делается за O(N^2), так как для каждой из O(N) вершин мы прибавляем к каждому из O(N) ребер W. Поиск увелич. цепи мы делаем за O(M) = O(N^2)

Алгоритм за O(N^3)
	Что нас не устраивает в нашем алгоритме и как это улучшить.
	Прибавление к строкам и столбцам(всем ребрам из конкретной вершины) делается слишком долго.
	Будем хранить для каждой вершины прибавки к ней. Тогда шаманство будет работать за O(N)
	Теперь разберемся с поиском в глубину. После появления нового ребра мы можем изменить ситуацию только если пройдем по этому ребру. 
	

// бл@, это было летом, в Августе, в ЛКШ. Я сдавал эту херь Елене Владимировне Андреевой.
// Конечно, я так и не понял до конца алгоритм за куб, ЕВА поставила мне 0.7 из 1, что
// принесло мне 5- в зачет по теории.
// Она говорила, что надо что-то почитать в инете, коды Лопатина и тд, но мне как-то лень
// Знать Венгерку - это не выгодно, но круто. Когда-нибудь я ее пойму, надеюсь
