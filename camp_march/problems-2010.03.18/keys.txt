Multi-key Sorting


Рассмотрим таблицу, столбцы которой пронумерованы от 1 до C. Для
простоты, элементы в таблице - строки, состоящие из строчных букв.

Col. 1 	Col. 2 	Col. 3 	 	Col. 1 	Col. 2 	Col. 3 		Col. 1 	Col. 2 	Col. 3
apple 	red 	sweet 		banana 	brown 	rotten 		apple 	green 	sour
apple 	green 	sour 		apple 	green 	sour 		apple 	red 	sweet
pear 	green 	sweet 		pear 	green 	sweet 		banana 	brown 	rotten
banana 	yellow 	sweet 		apple 	red 	sweet 		banana 	yellow 	sweet
banana 	brown 	rotten 		banana 	yellow 	sweet 		pear 	green 	sweet

		Table 1 					Table 2 					Table 3

У вас есть операция Sort(K) для таких таблиц: Sort(K) сортирует строки таблицы в 
порядке значений в столбце К (порядок столбцов не изменяется). Сортировка
стабильная, то есть строки, которые имеют одинаковые значения в столбце К, остаются в оригинальном порядке. 
Например, Sort(2) для таблицы 1 дает таблицу 2.
Мы заинтересованы в последовательности таких операций сортировки. Эти операции последовательно
применяеются к одной же таблице. Например, применяя последовательность Sort(2); Sort(1) к таблице 1
получим таблицу 3.
Две последовательности операций сортировки называются эквивалентными, если для любой таблицы, они дают один и тот же 
эффект. Например, Sort(2); Sort(2); Sort(1) эквивалентно Sort(2); Sort(1). Однако, 
не эквивалентно Sort(1); Sort(2), потому что эффект на таблицу 1 отличается.

Для заданной последовательности операций сортировки, определите кратчайшую эквивалентную последовательность.

Первая строка keys.in содержит два целых числа, С и N. C (1 <= C <= 1 000 000) - это число столбцов и N (1 <= N <= 3 000 000) число операций сортировок.
Вторая строка содержит N целых чисел, ki (1 <= ki <= С). Она определяет последовательность сортировок: 
Sort(k1); ...; Sort(kN).

Первая строка keys.out содержит одно целое число, М, - длину кратчайшей
последовательности операций сортировки, эквивалентной входной последовательности (подзадача A). Вторая строка
содержит ровно M целых чисел, представляющих кратчайшую последовательность (подзадача B). Вы можете пропустить
вторую строку, если решаете только подзадачу А.

keys.in

4 6
1 2 1 2 3 3

keys.out

3
1 2 3
